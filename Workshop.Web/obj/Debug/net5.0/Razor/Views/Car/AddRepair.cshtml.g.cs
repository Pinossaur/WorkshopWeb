#pragma checksum "C:\Users\Administrator\Desktop\Main Folder\Projects\WorkshopWeb\Workshop.Web\Views\Car\AddRepair.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "603bad77a41f85b4ef2676194e0877d49d97e460"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Car_AddRepair), @"mvc.1.0.view", @"/Views/Car/AddRepair.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Administrator\Desktop\Main Folder\Projects\WorkshopWeb\Workshop.Web\Views\_ViewImports.cshtml"
using Workshop.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Administrator\Desktop\Main Folder\Projects\WorkshopWeb\Workshop.Web\Views\_ViewImports.cshtml"
using Workshop.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"603bad77a41f85b4ef2676194e0877d49d97e460", @"/Views/Car/AddRepair.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"256f1efcfe7aa2a325f1d8692f6e460d4273a9e6", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Car_AddRepair : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Workshop.Web.Data.Entities.Car>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\Administrator\Desktop\Main Folder\Projects\WorkshopWeb\Workshop.Web\Views\Car\AddRepair.cshtml"
  
    ViewData["Title"] = "Appoint Repair";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<link href=\'https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css\' rel=\'stylesheet\' />\r\n\r\n<h1>Appoint Repair for car ");
#nullable restore
#line 9 "C:\Users\Administrator\Desktop\Main Folder\Projects\WorkshopWeb\Workshop.Web\Views\Car\AddRepair.cshtml"
                      Write(Model.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h1>

<div id=""calendar""></div>

<div id=""calendarModal"" class=""modal fade"" role=""dialog"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title""><span>Appoint Repair</span></h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">
                <p><b>Appointment Description</b></p>
                <input id=""repairDescription"" class=""form-control"" />
                <br />
                <p id=""repairDate""></p>
                <p id=""date""></p>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" onclick=""AppointRepair()"">Yes</button>
                <button type=""button"" data-dismiss=""modal"" class=""btn btn-danger"">No</button>
            </div>
        </div>
    </div>
</div>

");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script src=""https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js""></script>

    <script>

        var calendar;

        document.addEventListener(""DOMContentLoaded"", function () {
            var calendarEl = document.getElementById(""calendar"");
            calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: ""dayGridMonth"",
                dateClick: function (info) {
                    var todayDate = new Date();
                    var clickedDate = Date.parse(info.dateStr);
                    if(clickedDate > todayDate.getTime()){
                        $(""#calendarModal #repairDate"").empty().html(""Are you sure you want to appoint a repair to "" + info.dateStr);
                        $(""#calendarModal #date"").empty().html(info.dateStr);
                        $(""#calendarModal #date"").hide();
                        $(""#calendarModal"").modal()");
                WriteLiteral(";\r\n                    }\r\n                }\r\n            });\r\n\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: \"/API/Schedule/GetSchedules\",\r\n                data: JSON.stringify({ userEmail: \"");
#nullable restore
#line 62 "C:\Users\Administrator\Desktop\Main Folder\Projects\WorkshopWeb\Workshop.Web\Views\Car\AddRepair.cshtml"
                                              Write(User.Identity.Name);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""" }),
                contentType: ""application/json;"",
                success: function (data) {
                    $.each(data, function (i, v) {
                        var color;
                        if(v.IsConfirmed){
                            color = ""green"";
                        }
                        else{
                            color = ""red"";
                        }
                        calendar.addEvent({
                            id: v.id,
                            title: v.car.carName,
                            description: v.description,
                            price: v.price,
                            start: moment(v.startDate).format(),
                            startDate: v.startDate,
                            allDay: true,
                            backgroundColor: color,
                            borderColor: color,
                        }); 
                    });
                }
            })
            calendar.ren");
                WriteLiteral(@"der();

        });

        function AppointRepair() {
            $.ajax({
                type: ""POST"",
                url: ""/API/Schedule/AddSchedule"",
                data: JSON.stringify({ Description: $(""#repairDescription"").val(), Date: $(""#date"").text(), CarId: ");
#nullable restore
#line 95 "C:\Users\Administrator\Desktop\Main Folder\Projects\WorkshopWeb\Workshop.Web\Views\Car\AddRepair.cshtml"
                                                                                                              Write(Model.Id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@" }),
                contentType: ""application/json;"",
                success: function () {
                    $.ajax({
                        type: ""POST"",
                        url: ""/API/Schedule/GetSchedules"",
                        data: JSON.stringify({ userEmail: """);
#nullable restore
#line 101 "C:\Users\Administrator\Desktop\Main Folder\Projects\WorkshopWeb\Workshop.Web\Views\Car\AddRepair.cshtml"
                                                      Write(User.Identity.Name);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""" }),
                        contentType: ""application/json;"",
                        success: function (data) {
                            calendar.removeAllEvents();
                            $.each(data, function (i, v) {
                                calendar.addEvent({
                                    id: v.id,
                                    title: v.car.carName,
                                    description: v.description,
                                    price: v.price,
                                    start: moment(v.startDate).format(),
                                    startDate: v.startDate,
                                    allDay: true,
                                    backgroundColor: ""red"",
                                    borderColor: ""red"",
                                });
                            });
                            $(""#calendarModal"").modal(""hide"");
                        }
                    })
                    cal");
                WriteLiteral("endar.render();\r\n                }\r\n            })\r\n        }\r\n\r\n    </script>\r\n");
            }
            );
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Workshop.Web.Data.Entities.Car> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
